const express = require('express');
const mongoose = require('mongoose');
const bodyParser = require('body-parser');

const app = express();
const port = 3000;

// Connect to MongoDB
mongoose.connect('mongodb://localhost:27017/pollutionTracker', {
    useNewUrlParser: true,
    useUnifiedTopology: true
});

// Pollution Schema
const pollutionSchema = new mongoose.Schema({
    type: String,
    level: Number,
    location: String,
    latitude: Number,
    longitude: Number,
});

const Pollution = mongoose.model('Pollution', pollutionSchema);

// Middleware
app.use(bodyParser.json());
app.use(express.static('public'));

// Endpoint to submit pollution data
app.post('/submitPollution', async (req, res) => {
    try {
        const { type, level, location, latitude, longitude } = req.body;
        const newPollution = new Pollution({ type, level, location, latitude, longitude });
        await newPollution.save();
        res.json(newPollution);
    } catch (err) {
        res.status(500).send('Error saving pollution data');
    }
});

// Endpoint to get all pollution data
app.get('/pollutionData', async (req, res) => {
    try {
        const data = await Pollution.find();
        res.json(data);
    } catch (err) {
        res.status(500).send('Error fetching pollution data');
    }
});

// Start the server
app.listen(port, () => {
    console.log(`Server is running on http://localhost:${port}`);
});
